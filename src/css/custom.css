/**
 * Any CSS included here will be global. The classic template
 * bundles Infima by default. Infima is a CSS framework designed to
 * work well for content-centric websites.
 */

/* You can override the default Infima variables here. */
:root {
  --ifm-color-primary: rgba(15, 15, 55, 0.85);
  --ifm-color-primary-dark: rgba(15, 15, 55, 0.9);
  --ifm-color-primary-darker: rgba(15, 15, 55, 0.95);
  --ifm-color-primary-darkest: rgba(15, 15, 55, 1);
  --ifm-color-primary-light: rgba(33, 29, 80, 0.8);
  --ifm-color-primary-lighter: rgba(33, 29, 80, 0.75);
  --ifm-color-primary-lightest: rgba(33, 29, 80, 0.7);
  --ifm-code-font-size: 95%;
  --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.1);

  --ifm-link-color: #4020c0;
  --ifm-footer-link-hover-color: #aaaadd;

  --app-border-radius: 0.3em;
}

/* For readability concerns, you should choose a lighter palette in dark mode. */
[data-theme='dark'] {
  --ifm-color-primary: #25c2a0;
  --ifm-color-primary-dark: #21af90;
  --ifm-color-primary-darker: #1fa588;
  --ifm-color-primary-darkest: #1a8870;
  --ifm-color-primary-light: #29d5b0;
  --ifm-color-primary-lighter: #32d8b4;
  --ifm-color-primary-lightest: #4fddbf;
  --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.3);
}

.homepage-feature {
  margin-bottom: 2em;
}

.footer {
  background-color: var(--ifm-color-primary);
}

.sidebar-external-link {
  font-size: 0.85em;
  opacity: 0.8;
}

.sidebar-external-link a {
  padding-top: 0.2em;
  padding-bottom: 0.2em;
}

.sidebar-external-link svg {
  width: 0.85em;
  height: 0.85em;
}

/* Ancestor of .github-corner-icon */
article {
  position: relative;
}

.github-corner-icon {
  position: absolute;
  top: 0;
  right: 0;

  width: 2em;
  height: 2em;
}

@media (max-width: 1200px) {
  .github-corner-icon {
    visibility: hidden;
  }
}

/* If screen is large enough, i.e. not on mobile, let's overlay the image on
   the bottom-right corner of the code block. */
@media (min-width: 500px) {
  .code-with-illustration {
    position: relative;
  }

  .code-with-illustration > img {
    position: absolute;
    bottom: 0.6em;
    right: 0.6em;
    z-index: 10;

    height: 7em;
  }

  /* But let's make sure we don't cover the copy-paste button */
  .code-with-illustration button {
    z-index: 20;
  }
}
@media (min-width: 1500px) {
  .code-with-illustration > img {
    height: 10em;
  }
}

/* Hide the default pencil icon and replace it with a GitHub icon */
.theme-edit-this-page svg {
  display: none;
}
.theme-edit-this-page::before {
  /* See https://stackoverflow.com/questions/19255296/is-there-a-way-to-use-svg-as-content-in-a-pseudo-element-before-or-after */
  content: '';
  display: inline-block;
  background-image: url('/img/thirdparty/github-mark.svg');
  background-size: 1.2em 1.2em;
  width: 1.2em;
  height: 1.2em;

  vertical-align: text-bottom;
  margin-right: 0.3em;
}

/* Add an arrow */
.theme-edit-this-page::after {
  content: ' âž”';
}

p.react-idc-demo {
  text-align: center;
}

p.react-idc-demo > span.react-idc-demo {
  display: inline-block;
  width: min(100%, max(50%, 330px));
  aspect-ratio: 3 / 2;
}

span.react-idc-demo > span {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

/*
 * Note: using a <span> with "display: block;" instead of a <div> as otherwise
 * we get a warning saying a <div> cannot be a descendant of a <p>. This is
 * because in theory, it's a bad practice to have anything else than inline
 * elements inside a <p>. But here we're just using <p> in order to have a
 * standard paragraph margin under the demo, and we need a "display: block;"
 * for the demo. This should be fine.
 *
 * See also https://www.w3.org/TR/html401/struct/text.html#h-9.3.1
 */
.react-idc-demo span[data-idc-parent] {
  display: block;
  border-radius: var(--app-border-radius);
  transition: all 0.5s ease;
}

.react-idc-demo img {
  /* just follow the parent's size */
  width: 100%;
  height: 100%;
  vertical-align: bottom;
}

.react-idc-demo-caption {
  font-size: 0.9em;
  font-style: italic;
}
